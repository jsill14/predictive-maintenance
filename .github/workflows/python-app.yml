name: Dataiku Pipeline

on:
  push:
    branches:
      - master

env:
  bundle_name: ${{ format('bundle_{0}', github.run_number) }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7"]

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Clean workspace
        run: rm -rf *

      - name: Echo bundle name
        run: echo $bundle_name

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r dataiku-api-client
          python -m pip install -r pandas==0.23.4 radon pytest

      - name: Project Validation
        run: |
          python -m pytest 1_project_validation/run_test.py -o junit_family=xunit1 --host="${{ secrets.DESIGN_URL }}" --api="${{ secrets.DESIGN_API_KEY }}" --project="${{ secrets.DSS_PROJECT }}" --junitxml=reports/PROJECT_VALIDATION.xml

      - name: Package Bundle
        run: |
          python 2_package_bundle/run_bundling.py "${{ secrets.DESIGN_URL }}" "${{ secrets.DESIGN_API_KEY }}" "${{ secrets.DSS_PROJECT }}" $bundle_name
          echo "DSS project bundle created and downloaded in local workspace"
          ls -la

      - name: Preprod Test
        run: |
          python 3_preprod_test/import_bundle.py "${{ secrets.DESIGN_URL }}" "${{ secrets.DESIGN_API_KEY }}" "${{ secrets.DSS_PROJECT }}" $bundle_name "${{ secrets.AUTO_PREPROD_ID }}"
          python -m pytest 3_preprod_test/run_test.py -o junit_family=xunit1 --host="${{ secrets.AUTO_PREPROD_URL }}" --api="${{ secrets.AUTO_PREPROD_API_KEY }}" --project="${{ secrets.DSS_PROJECT }}" --junitxml=reports/PREPROD_TEST.xml

      - name: Deploy to Production
        run: |
          python 4_deploy_prod/deploy_bundle.py "${{ secrets.DESIGN_URL }}" "${{ secrets.DESIGN_API_KEY }}" "${{ secrets.DSS_PROJECT }}" $bundle_name "${{ secrets.AUTO_PROD_ID }}" "${{ secrets.AUTO_PROD_URL }}" "${{ secrets.AUTO_PROD_API_KEY }}"

      - name: Clean Up
        run: |
          rm -rf $bundle_name.zip

      - name: Publish Test Results
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: 'reports/**/*.xml'
